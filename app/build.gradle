apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
apply from: 'tinkerpatch.gradle'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    //签名配置
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 26
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.example.lenovo.mytestcode"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0.0"
        flavorDimensions("pack")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            moduleName "NdkJniDemo"          //生成的so名字
            abiFilters "armeabi", "armeabi-v7a", "x86" //输出指定三种abi体系结构下的so库，目前可有可无。
        }
    }

    //多渠道打包配置的一种方式
    productFlavors{
        tentcent{
            applicationId "com.example.lenovo.mytestcode"
            dimension "pack"
            manifestPlaceholders =[appName:"tencent"]
        }
        baidu{
            applicationId "com.example.lenovo.mytestcode"
            dimension "pack"
            manifestPlaceholders =[appName:"baidu"]
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            def outputFile = output.outputFile
//            def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
//            if (variant.buildType.name.equals('release')) {
//                if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                    outputFileName = "${defaultConfig.versionName}_${signTime()}_${variant.productFlavors[0].name}_release.apk"
////                    output.outputFile = new File(outputFile.parent, fileName)
//                }
//            } else if (variant.buildType.name.equals('debug')) {
//                if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                    outputFileName = "${defaultConfig.versionName}_${signTime()}_${variant.productFlavors[0].name}_debug.apk"
////                    outputFileName = new File(outputFileName.parent, fileName)
//                }
//
//            }
//        }
//    }
    applicationVariants.all { variant ->
        variant.outputs.all {output ->
            //获取当前时间的"YYYY-MM-dd"格式。
            def createTime = new Date().format("YYYY-MM-dd", TimeZone.getTimeZone("GMT+08:00"))
            if (variant.buildType.name.equals('release')) {
                //这个修改输出的APK路径 （路径不能是盘符根目录例如F：\\，要指定一个文件夹）
                variant.getPackageApplication().outputDirectory = new File("F:\\my\\mytestcode_release")
                variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
                    //这个修改输出APK的文件名
                    apkData.outputFileName ="${createTime}-${variant.name}-${variant.versionName}.apk"
                }
            }
        }
    }

    //greendao配置
    greendao {
        //版本号，升级时可配置
        schemaVersion 1
        daoPackage 'com.example.lenovo.mytestcode.db.greendao'
        targetGenDir 'src/main/java'
    }

    lintOptions{
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // add library
    //    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    //    compile "io.reactivex.rxjava2:rxjava:2.1.0"
    //    compile "io.reactivex:rxjava:1.2.9"
    //retrofit
    //Gson converter
    //RxJava2 Adapter
    //okhttp

    //java注解
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:palette-v7:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.orhanobut:logger:2.1.1'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.dingmouren.paletteimageview:paletteimageview:1.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.zhy:percent-support-extends:1.1.1'
    implementation 'com.google.dagger:dagger:2.13'
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    testImplementation 'junit:junit:4.12'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.13'
    implementation 'com.github.SHPDZY:LogCatDialog:1.0.2'

//    compileOnly 'com.tinkerpatch.tinker:tinker-android-anno:1.8.0'
//    implementation 'com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.1.8'
    // 若使用annotation需要单独引用,对于tinker的其他库都无需再引用
    compileOnly("com.tinkerpatch.tinker:tinker-android-anno:1.9.8")
    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:1.9.8")
//    implementation("com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.8")
}
